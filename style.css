* {
  box-sizing: border-box;
}

body {
  --base-delay: 0s;
  --slide-width: 50rem;
  --slide-height: 28rem;
  --slide-count: 5;
  background: #333;
}

.tsumirez-slider {
  width:var(--slide-width);
  text-align:center;
  margin:5rem auto;
  position: relative;
}

.tsumirez-slider > article {
  position: relative;
  width: var(--slide-width);
}

/* image-slider container */
.tsumirez-slider > article >  span {
  border: 1px solid black;
  width: var(--slide-width);
  display: flex;
  overflow: hidden;
  margin: 5em auto 0;
}

/* individual slide styles */

.tsumirez-slider > article >  span > div {
  flex: 0 0 var(--slide-width);
  height: var(--slide-height);
  background-color: black;
  text-align: center;
  order: 1;
  border-right: 1px solid black;
  animation: auto-slide calc(var(--slide-count) * 2s) steps(5) infinite;
}

/* assinging animation delays to each slide */

.tsumirez-slider article > span > div:nth-of-type(1) {
  animation-delay: calc(var(--base-delay) - 8s);
}

.tsumirez-slider article > span > div:nth-of-type(2) {
  animation-delay: calc(var(--base-delay) - 6s);
}

.tsumirez-slider article > span > div:nth-of-type(3) {
  animation-delay: calc(var(--base-delay) - 4s);
}

.tsumirez-slider article > span > div:nth-of-type(4) {
  animation-delay: calc(var(--base-delay) - 2s);
}

.tsumirez-slider article > span > div:nth-of-type(5) {
  animation-delay: calc(var(--base-delay) - 0s);
}

/* pausing automatic scroll on mouse over */

.tsumirez-slider:hover > article > span > div,
.tsumirez-slider:hover > article > div::after {
  animation-play-state: paused;
}

/* ARROW NAVIGATION */
.tsumirez-slider > label{
  top: 1px;
  width: 2.5rem;
  height: var(--slide-height);
  position: absolute;
  color:rgba(255,255,255,0.8);
  font: 4rem Playball,serif;
  transform-origin: center;
  display:none;
  cursor: pointer;
  line-height: var(--slide-height);
  z-index: 1;
}

.tsumirez-slider > label:hover {
  color:rgba(100,255,100,0.8);
}

/* preventing default animation reset when using arrrow labels */
#slider  > label:active ~ article > span > div {
  animation-name: auto-slide;
}

#slider > label:active ~ article > div::after {
  animation-name: nav-buttons;
}

/* revealing and styling arrow labels based on their position (left or right of slide)*/
.tsumirez-slider > input[type="radio"]:checked + label {
  display:block;
  transform: rotate(0.5turn);
  left:1px;
}

.tsumirez-slider > input[type="radio"]:checked + label + input + label + input + label,
.tsumirez-slider > input[type="radio"]:checked + label + input + label + label,
.tsumirez-slider > input[type="radio"]:checked + label + label + label {
  display:block;
  right:1px;
}

/* bottom navigation controls styles */

.tsumirez-slider > article >  div {
  display: inline-flex;
  margin: 1em auto;
  width: calc(var(--slide-count * 2rem));
  position: relative;
  overflow: hidden;
}

.tsumirez-slider > article >  div::before {
  content: '';
  position: absolute;
  width: 100%;
  height:100%;
  background:gray;
  z-index:1;
}

.tsumirez-slider > article > div > label {
    position: relative;
    width: 2rem;
    height:1.5rem;
    overflow: hidden;
    z-index:3;
}

.tsumirez-slider > article > div > label::before {
  content: '';
  width:1.5rem;
  height:1.5rem;
  position: absolute;
  top:0;
  left:0.25rem;
  border-radius:50%;
  box-shadow: 0 0 0 1.5rem #333, inset 0 0 0 1px #000;
}

.tsumirez-slider > article > div > label:hover::before {
  background-color:rgba(255,255,255,0.6);
}

.tsumirez-slider > article > div::after {
  content: '';
  position: relative;
  background:green;
  width:20%;
  margin-left:-100%;
  z-index: 2;
  animation: nav-buttons 10s steps(5, jump-end) var(--base-delay) infinite;
}

/* radio input based navigation functionality */

input[type="radio"] {
  display: none;
}

/* reset animations when pressing a control */
input[type="radio"]:checked ~ article > span > div {
  animation-name: auto-slide;
}

input[type="radio"]:active ~ article > span > div {
  animation-name: auto-slide-copy;
}

input[type="radio"]:checked ~ article > div::after {
  animation-name: nav-buttons;
}

input[type="radio"]:active ~ article > div::after {
  animation-name: nav-buttons-copy;
}

/* :active styles need priority over checked ones to avoid conflicts. That's why they get more precise selector */
input[type="radio"]:nth-of-type(1):checked ~  article,
input[type="radio"][name="slide"]:nth-of-type(1):active ~  article {
  --base-delay: 0s;
}

input[type="radio"]:nth-of-type(2):checked ~ article,
input[type="radio"][name="slide"]:nth-of-type(2):active ~  article {
  --base-delay: -2s;
}

input[type="radio"]:nth-of-type(3):checked ~ article,
input[type="radio"][name="slide"]:nth-of-type(3):active ~ article {
  --base-delay: -4s;
}

input[type="radio"]:nth-of-type(4):checked ~ article,
input[type="radio"][name="slide"]:nth-of-type(4):active ~ article {
  --base-delay: -6s;
}

input[type="radio"]:nth-of-type(5):checked ~ article,
input[type="radio"][name="slide"]:nth-of-type(5):active ~ article {
  --base-delay: -8s;
}

/* animation for automatic slide scrolling */

@keyframes nav-buttons {
  0% {margin-left: -100%}
  100% {margin-left:-0%}
}

@keyframes nav-buttons-copy {
  0% {margin-left: -100%}
  100% {margin-left:-0%}
}

@keyframes auto-slide {
  0% {order:5}
  100% {order:1}
}

/* copy animation for purposes of resetting animation when user interacts with component */

@keyframes auto-slide-copy {
  0% {order:5}
  100% {order:1}
}

.tsumirez-slider > article > span > div > img {
   width:var(--slide-width)
}
/* TO DO 

1. refactor arrow styles (no more new css rules  for each new input) v
2 refactor animations (break up big  slide animation into two simple ones - order one and margin one)
3. add pause/play functionality and visuals
4. push further automatization & reliance on variables
5. pimp the style!

*/